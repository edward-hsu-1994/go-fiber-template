// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gofiber/fiber/v2"
	"github.com/google/wire"
	"go-fiber-template/accesses"
	"go-fiber-template/routes"
	"go-fiber-template/services"
)

import (
	_ "go-fiber-template/docs"
)

// Injectors from wire.go:

func InitializeApp() (*fiber.App, error) {
	v, err := FilberConfig()
	if err != nil {
		return nil, err
	}
	app := fiber.New(v...)
	return app, nil
}

func InitialFiberRouters() ([]routes.FiberRouter, error) {
	newsRouter := routes.NewNewsRouter()
	postRepository := accesses.NewMockPostRepository()
	postService := services.NewPostService(postRepository)
	postRouter := routes.NewPostRouter(postService)
	v := AssembleFiberRouters(newsRouter, postRouter)
	return v, nil
}

// wire.go:

func FilberConfig() ([]fiber.Config, error) {
	return []fiber.Config{}, nil
}

var repoSet = wire.NewSet(accesses.NewMockPostRepository)

var serviceSet = wire.NewSet(services.NewPostService)

var routesSet = wire.NewSet(routes.NewNewsRouter, routes.NewPostRouter, AssembleFiberRouters)

func AssembleFiberRouters(
	newsRouter *routes.NewsRouter,
	postRouter *routes.PostRouter,
) []routes.FiberRouter {
	return []routes.FiberRouter{newsRouter, postRouter}
}
